#include <iostream>

using namespace std;

int main()
{
	int MASS[10];
	int* mass = MASS;

	__asm
	{
		mov esi, mass // в esi теперь адресс массива MASS
		mov eax, 10 // так как в массиве 10 элементов
		mov edx, eax // записываем 10 в edx
		xor ecx, ecx // обнуляем счетчик
		xor eax, eax // и eax

		start : // заполнение текущего элемента массива
		cmp ecx, edx // сравниваем счетчик с количеством элементов
			je End // если они равны, значит мы прошли все элементы

			mov[esi], ecx // если нет, то кладем новый элемент по адрессу
			add esi, 4 // так как у нас int, увеличиваем адресс на 4
			inc ecx // элемент заполнен, счетчик увеличиваем
			jmp start // возвращаемся чтобы заполнить следующий элемент

			End : // все элементы заполнены
	}

	for (int i = 0; i < 10; i++)
	{
		cout << mass[i] << " ";
	}
	cout << endl;

	__asm
	{
		mov esi, mass // в esi теперь адресс массива MASS
		add esi, 40

		mov edx, 36 // 9*4 это адресс последнего элемента

		start1: // возвращаемся если есть пара
		sub esi, 4 // так как esi указывает на следующий элемент от нужного нам

			mov ebx, [esi] // кладем крайний справа элемент в ebx
			sub esi, edx // возвращаемся к крайнему слева элементу
			mov eax, [esi] // кладем крайний слева элемент в eax
			mov[esi], ebx // сразу кладем в крайний слева элемент из ebx (крайний спрва)
			add esi, edx // возврвщаемся к крайнему справа элементу
			mov[esi], eax // кладем в него крайний слева элемент
			sub edx, 8 // уменьшаем edx на 8, так как 2 элемента по 4 мы уже заполнили

			cmp edx, 4 // пока edx не стал равен 4м
			jne start1 // возвращаемся и заполняем следующую пару
	}

	for (int i = 0; i < 10; i++)
	{
		cout << mass[i] << " ";
	}

	return 0;
}